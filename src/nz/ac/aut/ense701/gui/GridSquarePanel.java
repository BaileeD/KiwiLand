package nz.ac.aut.ense701.gui;

import nz.ac.aut.ense701.gameModel.Game;
import nz.ac.aut.ense701.gameModel.Terrain;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import java.awt.*;
import java.io.File;

public class GridSquarePanel extends JPanel
{
	private static final Border normalBorder = new LineBorder(Color.BLACK, 1);
	private static final Border activeBorder = new LineBorder(Color.RED, 3);
	private JLabel lblText;
	private Game   game;
	private int    row;
	private int    column;

	/**
	 * Creates new GridSquarePanel.
	 *
	 * @param game   the game to represent
	 * @param row    the row to represent
	 * @param column the column to represent
	 */
	public GridSquarePanel(Game game, int row, int column)
	{
		this.game = game;
		this.row = row;
		this.column = column;
		initComponents();
	}

	/**
	 * Updates the representation of the grid square panel.
	 */
	public void update()
	{
		// get the GridSquare object from the world
		Terrain terrain = game.getTerrain(row, column);
		boolean squareVisible = game.isVisible(row, column);
		boolean squareExplored = game.isExplored(row, column);

		switch (terrain)
		{
			case SAND:
				lblText.setIcon(new ImageIcon("resources/Sand_Tile.jpg"));
				break;
			case FOREST:
				lblText.setIcon(new ImageIcon("resources/Forest_Tile.jpg"));
				break;
			case WETLAND:
				lblText.setIcon(new ImageIcon("resources/Wetland_Tile.jpg"));
				break;
			case SCRUB:
				lblText.setIcon(new ImageIcon("resources/Scrub_Tile.jpg"));
				break;
			case WATER:
				lblText.setIcon(new ImageIcon("resources/Water_Tile.jpg"));
				break;
			default:
				lblText.setIcon(new ImageIcon("resources/Unexplored_Tile_T.png"));
				break;
		}

		if (squareExplored || squareVisible)
		{
			// Set the text of the JLabel according to the occupant
			lblText.setText(game.getOccupantStringRepresentation(row, column));
			// set border colour according to playerBorder of not
			setBorder(game.hasPlayer(row, column) ? activeBorder : normalBorder);
		}
		else
		{
			lblText.setText("");
			lblText.setIcon(new ImageIcon("resources/Unexplored_Tile_T.png"));
			setBorder(normalBorder);
		}
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents()
	{
		lblText = new JLabel();

		setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		setLayout(new BorderLayout());

		lblText.setFont(new java.awt.Font("Tahoma", 0, 18));
		lblText.setHorizontalAlignment(SwingConstants.CENTER);
		lblText.setText("content");
		lblText.setOpaque(true);
		add(lblText, BorderLayout.CENTER);
	}


}
